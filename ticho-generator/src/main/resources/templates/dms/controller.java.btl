package ${package.controller};

import cn.xrtech.mvc.view.PageResult;
import cn.xrtech.web.annotation.View;
<% if(enableSwagger){ %>
import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import com.github.xiaoymin.knife4j.annotations.ApiSort;
<% }%>
import ${package.entity}.${table.entityName};
import ${package.query}.${className.query};
import ${package.service}.${className.service};
<% if(enableSwagger){ %>
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
<% }%>
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

<% var lowEntity = strutil.toLowerCase(strutil.subStringTo(table.entityName,0,1))+strutil.subString(table.entityName,1); %>

/**
 * ${table.comment!}
 *
 * @author ${author!}
 * @createTime ${date!}
 */
@RestController
@RequestMapping("${lowEntity}")
 <% if(enableSwagger){ %>
@Api(tags = "${table.comment!}")
 <% } %>
@ApiSort(10)
@View
public class ${className.controller} {

    @Autowired
    private ${table.entityName}Service ${lowEntity}Service;

     <% if(enableSwagger){ %>
    @ApiOperation(value = "保存${table.comment!}", notes = "保存${table.comment!}")
    @ApiOperationSupport(order = 10)
     <% }else{ %>
    /**
     * 保存${table.comment!}
     *
     * @param ${lowEntity} ${table.comment!}
     * @return ${table.entityName} 保存后的${table.comment!}
     */
     <% }%>
    @PostMapping
    public ${table.entityName} save${table.entityName}(@RequestBody ${table.entityName} ${lowEntity}) {
        ${lowEntity}Service.save${table.entityName}(${lowEntity});
        return ${lowEntity};
    }

     <% if(enableSwagger){ %>
    @ApiOperation(value = "删除${table.comment!}", notes = "根据${keyNameLF}删除${table.comment!}")
    @ApiOperationSupport(order = 20)
    @ApiImplicitParam(value = "编号", name = "${keyNameLF}", required = true)
     <% }else{ %>
    /**
     * 根据${keyNameLF}删除 ${table.comment!}
     *
     * @param ${keyNameLF} 主键
     * @return true-成功, false-失败
     */
     <% }%>
    @DeleteMapping
    public boolean remove${table.entityName}(@RequestParam("${keyNameLF}") String ${keyNameLF}) {
        return ${lowEntity}Service.remove${table.entityName}(${keyNameLF});
    }

     <% if(enableSwagger){ %>
    @ApiOperation(value = "修改${table.comment!}", notes = "根据${keyNameLF}修改${table.comment!}")
    @ApiOperationSupport(order = 30)
     <% }else{ %>
    /**
     * 修改${table.comment!}
     *
     * @param ${lowEntity} ${table.comment!} 对象
     * @return ${table.entityName} 修改后的${table.comment!}
     */
     <% }%>
    @PutMapping
    public ${table.entityName} modify${table.entityName}(@RequestBody ${table.entityName} ${lowEntity}) {
        ${lowEntity}Service.modify${table.entityName}(${lowEntity});
        return ${lowEntity};
    }

     <% if(enableSwagger){ %>
    @ApiOperation(value = "${table.comment!}查询", notes = "根据${keyNameLF}查询${table.comment!}")
    @ApiOperationSupport(order = 40)
    @ApiImplicitParam(value = "编号", name = "${keyNameLF}", required = true)
     <% }else{ %>
    /**
     * 根据${keyNameLF}查询${table.comment!}
     *
     * @param ${keyNameLF} 主键 
     * @return ${table.entityName} ${table.comment!}
     */
     <% }%>
    @GetMapping
    public ${table.entityName} get${table.entityName}(@RequestParam("${keyNameLF}") String ${keyNameLF}) {
        return ${lowEntity}Service.get${table.entityName}(${keyNameLF});
    }

     <% if(enableSwagger){ %>
    @ApiOperation(value = "${table.comment!}列表查询(分页)", notes = "分页查询${table.comment!}列表")
    @ApiOperationSupport(order = 50)
     <% }else{ %>
    /**
     * 分页查询 ${table.comment!} 列表
     *
     * @return List<${table.entityName}> ${table.comment!} 列表
     */
     <% }%>
    @GetMapping("page")
    public PageResult<${table.entityName}> page(${table.entityName}Query ${lowEntity}Query) {
        return ${lowEntity}Service.page(${lowEntity}Query);
    }
}
